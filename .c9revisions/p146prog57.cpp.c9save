{"ts":1350331807495,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"//P.146 Program #57\n//Rob Lamog\n//Comp 516\n\n#include <iostream>\n\nusing namespace std;\n\nint main () {\n    int binNum[8];\n\t\n\tcout << \"Enter an 8-bit binary #. Separate each digit by a space.\" << endl;\n\tcin >> binNum[0] >> binNum[1] >> binNum[2] >> binNum[3] >> binNum[4] >> binNum[5] >> binNum[6] >> binNum[7];\n\tcout << endl;\n\t\n\tint carry = 0;\n\tfor (int i = 0; i < 10; i++) {\n\t\tif (binNum[7] == 1) carry = 1;\n\t\n\t\tfor (int j = 7; j >= 0; j--) {\n\t\t\tif ((carry == 1) && (binNum[j] == 1)) {\n\t\t\t\tbinNum[j] = 0;\n\t\t\t\tcarry = 1;\n\t\t\t} else if ((carry == 1) && (binNum[j] == 0)) {\n\t\t\t\tbinNum[j] = 1;\n\t\t\t\tcarry = 0;\n\t\t\t} else if ((carry == 0) && (binNum[j] == 1)) {\n\t\t\t\tbinNum[j] = 1;\n\t\t\t\tcarry = 0;\n\t\t\t} else if ((carry == 0) && (binNum[j] == 0)) {\n\t\t\t\tbinNum[j] = 0;\n\t\t\t\tcarry = 0;\n\t\t\t}\n\t\t}\n\n\t\tfor (int k = 0; k < 8; k++) {\n\t\t\tcout << binNum[k];\n\t\t}\n\t\tcout << endl;\n\t\t\n\t\tcarry = 1; //To add one to the next loop.\n\t}\n\t\n\treturn 0;\n}"]],"start1":0,"start2":0,"length1":0,"length2":919}]],"length":919}
{"contributors":[],"silentsave":false,"ts":1350982040200,"patch":[[{"diffs":[[0,"Num[7];\n"],[1,"//"],[0,"\tcout <<"]],"start1":301,"start2":301,"length1":16,"length2":18},{"diffs":[[0,"<< endl;"],[1,"\n\n\tfor (int k = 0; k < 8; k++) {\n\t\tcout << binNum[k];\n\t}\n\tcout << endl << endl;"],[0,"\n\t\n\tint "]],"start1":317,"start2":317,"length1":16,"length2":95},{"diffs":[[0,"urn 0;\n}"],[1,"\n\n/*\nEnter an 8-bit binary #. Separate each digit by a space.\n01010011\n\n01010100\n01010101\n01010110\n01010111\n01011000\n01011001\n01011010\n01011011\n01011100\n01011101\n*/"]],"start1":992,"start2":992,"length1":8,"length2":172}]],"length":1164,"saved":false}
